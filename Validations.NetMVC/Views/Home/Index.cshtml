@model Validations.NetMVC.Models.Kullanici

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.min.js"></script>

    <style>
        .validation-summary ul {
            list-style-type: none;
        }

        .input-validation-error {
            border-color: red;
        }

        .field-validation-error {
            background-color: red;
            color: white;
            margin-top: 0;
            border-radius: 3px;
            position: relative;
            right: 0;
        }
    </style>
    <script src="~/Scripts/jquery-3.0.0.min.js"></script>
    @* post a düşmeden önce hata kontrolü sağlamak için bu kütüphaneleri
        kullabiliriz.(Client-side validation) bunu geçersek eğer server a gider*@
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        <br /><br />
              <div class="form-horizontal col-md-10">
                  <h4>Kullanıcı</h4>
                  <hr />
                  @*Error mesajlarının üstte gözükmesi için kullanılıyor (ValidationSummary) true ise üstte çıkmıyor, false ise hepsi yukarıda gözüküyor. *@
                  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                  <div class="form-group">
                      @Html.LabelFor(model => model.Ad, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-12">
                          @Html.EditorFor(model => model.Ad, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Ad, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.LabelFor(model => model.Soyad, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-12">
                          @Html.EditorFor(model => model.Soyad, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Soyad, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.LabelFor(model => model.KullaniciAdi, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-12">
                          @Html.EditorFor(model => model.KullaniciAdi, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.KullaniciAdi, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.LabelFor(model => model.Sifre, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-12">
                          @Html.EditorFor(model => model.Sifre, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Sifre, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.LabelFor(model => model.Sifre2, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-12">
                          @Html.EditorFor(model => model.Sifre2, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Sifre2, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.LabelFor(model => model.Eposta, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-12">
                          @Html.EditorFor(model => model.Eposta, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Eposta, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.LabelFor(model => model.Eposta2, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-12">
                          @Html.EditorFor(model => model.Eposta2, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Eposta2, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.LabelFor(model => model.Takiminiz, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-12">
                          @Html.EditorFor(model => model.Takiminiz, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Takiminiz, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      <div class="col-md-offset-2 col-md-12">
                          <input type="submit" value="Create" class="btn btn-success" />
                      </div>
                  </div>
              </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
